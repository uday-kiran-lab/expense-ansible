- name: install backend with service
  hosts: backend
  become: true 
  tasks:
   
  - name: disable node.js 
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable node.js
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: install node.js
    ansible.builtin.package:
      name: nodejs
      state: present
  - name: Create a user
    ansible.builtin.user:
      name: expense
      state: present
  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download the backend
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip
  - name: Unarchive a file that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  - name: install npm dependices
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: Copy backend service file 
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system
      # remote_src: yes
  
  - name: install PyMySQL and cryptography
    ansible.builtin.pip:
      name:
      - PyMySQL
      state: present
      executable: pip3.9
  # - name: import sql data
  #   community.mysql.mysql_db:
  #     login_host: mysql.devopskiran.online
  #     login_user: root
  #     login_password: ExpenseApp@1
  #     state: import
  #     name: all
  #     target: /app/schema/backend.sql
  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.devopskiran.online
      target: /app/schema/backend.sql
      name: all
      state: import
  - name: backend services is running
    ansible.builtin.systemd_service:
      state: restarted
      daemon_reload: true
      name: backend